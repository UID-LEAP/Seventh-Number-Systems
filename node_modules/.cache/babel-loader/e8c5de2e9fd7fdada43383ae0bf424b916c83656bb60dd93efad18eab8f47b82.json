{"ast":null,"code":"import _toConsumableArray from\"C:/Users/bryce/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/bryce/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"C:/Users/bryce/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import styles from'./Quiz.module.scss';import quizDataInitial from'./assets/quiz-data';import Start from'./pages/Start/Start';import Question from'./pages/Question/Question';import Result from'./pages/Result/Result';function Quiz(){var quizDataInitialFormatted=_objectSpread(_objectSpread({},quizDataInitial),{},{questions:quizDataInitial.questions.map(function(question){return _objectSpread(_objectSpread({},question),{},{isAnswered:false,alternatives:question.alternatives.map(function(alternative){return _objectSpread(_objectSpread({},alternative),{},{isUserAnswer:false});})});})});var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),numCorrectAnswers=_useState4[0],setNumCorrectAnswers=_useState4[1];var _useState5=useState(quizDataInitialFormatted),_useState6=_slicedToArray(_useState5,2),quizData=_useState6[0],setQuizData=_useState6[1];var currentUrl=window.location.href;var numTotalQuestions=quizData.questions.length;var numCurrentQuestion=currentPage-1;var isStartPage=currentPage===1;var isResultPage=currentPage===numTotalQuestions+2;var currentQuestion=quizData.questions[currentPage-2];var goToNextPage=function goToNextPage(){setCurrentPage(currentPage+1);};var onAnswerSelected=function onAnswerSelected(clickedAlternative){var currentQuestionIndex=quizData.questions.findIndex(function(question){return question.id===currentQuestion.id;});var alternativesCopy=_toConsumableArray(currentQuestion.alternatives);var foundAlternative=alternativesCopy.find(function(alternative){return alternative.id===clickedAlternative.id;});var updatedAlternative=_objectSpread(_objectSpread({},foundAlternative),{},{isUserAnswer:true});var alternativeIndex=alternativesCopy.findIndex(function(alternative){return alternative.id===updatedAlternative.id;});alternativesCopy[alternativeIndex]=updatedAlternative;setQuizData(_objectSpread(_objectSpread({},quizData),{},{questions:[].concat(_toConsumableArray(quizData.questions.slice(0,currentQuestionIndex)),[_objectSpread(_objectSpread({},currentQuestion),{},{alternatives:alternativesCopy,isAnswered:true})],_toConsumableArray(quizData.questions.slice(currentQuestionIndex+1)))}));if(clickedAlternative.isCorrect){setNumCorrectAnswers(numCorrectAnswers+1);}setTimeout(function(){goToNextPage();},2500);};var restartQuiz=function restartQuiz(){setNumCorrectAnswers(0);setQuizData(quizDataInitialFormatted);setCurrentPage(1);};return/*#__PURE__*/React.createElement(\"div\",{className:styles.quiz},isStartPage&&/*#__PURE__*/React.createElement(\"div\",{className:styles.page},/*#__PURE__*/React.createElement(Start,{description:quizData.description,img:quizData.img,onClickStart:goToNextPage,title:quizData.title})),!isStartPage&&!isResultPage&&/*#__PURE__*/React.createElement(\"div\",{className:styles.page},/*#__PURE__*/React.createElement(Question,{numCurrentQuestion:numCurrentQuestion,numTotalQuestions:numTotalQuestions,onAnswerSelected:onAnswerSelected,question:currentQuestion,quizTitle:quizData.title})),isResultPage&&/*#__PURE__*/React.createElement(\"div\",{className:styles.page},/*#__PURE__*/React.createElement(Result,{quizTitle:quizData.title,currentUrl:currentUrl,numCorrectAnswers:numCorrectAnswers,numTotalQuestions:numTotalQuestions,results:quizData.results,onClickRestart:restartQuiz})));}export default Quiz;","map":{"version":3,"names":["React","useState","styles","quizDataInitial","Start","Question","Result","Quiz","quizDataInitialFormatted","questions","map","question","isAnswered","alternatives","alternative","isUserAnswer","currentPage","setCurrentPage","numCorrectAnswers","setNumCorrectAnswers","quizData","setQuizData","currentUrl","window","location","href","numTotalQuestions","length","numCurrentQuestion","isStartPage","isResultPage","currentQuestion","goToNextPage","onAnswerSelected","clickedAlternative","currentQuestionIndex","findIndex","id","alternativesCopy","foundAlternative","find","updatedAlternative","alternativeIndex","slice","isCorrect","setTimeout","restartQuiz","quiz","page","description","img","title","results"],"sources":["C:/Users/bryce/OneDrive/Desktop/LEAPQuiz/seventh-ratios-react-quiz/src/components/Quiz/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './Quiz.module.scss';\r\nimport quizDataInitial from './assets/quiz-data';\r\n\r\nimport Start from './pages/Start/Start';\r\nimport Question from './pages/Question/Question';\r\nimport Result from './pages/Result/Result';\r\n\r\nfunction Quiz() {\r\n  const quizDataInitialFormatted = {\r\n    ...quizDataInitial,\r\n    questions: quizDataInitial.questions.map(question => ({\r\n      ...question,\r\n      isAnswered: false,\r\n      alternatives: question.alternatives.map(alternative => ({\r\n        ...alternative,\r\n        isUserAnswer: false,\r\n      })),\r\n    })),\r\n  };\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [numCorrectAnswers, setNumCorrectAnswers] = useState(0);\r\n  const [quizData, setQuizData] = useState(quizDataInitialFormatted);\r\n\r\n  const currentUrl = window.location.href;\r\n\r\n  const numTotalQuestions = quizData.questions.length;\r\n  const numCurrentQuestion = currentPage - 1;\r\n\r\n  const isStartPage = currentPage === 1;\r\n  const isResultPage = currentPage === numTotalQuestions + 2;\r\n\r\n  const currentQuestion = quizData.questions[currentPage - 2];\r\n\r\n  const goToNextPage = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const onAnswerSelected = clickedAlternative => {\r\n    const currentQuestionIndex = quizData.questions.findIndex(\r\n      question => question.id === currentQuestion.id,\r\n    );\r\n\r\n    const alternativesCopy = [...currentQuestion.alternatives];\r\n\r\n    const foundAlternative = alternativesCopy.find(\r\n      alternative => alternative.id === clickedAlternative.id,\r\n    );\r\n\r\n    const updatedAlternative = {\r\n      ...foundAlternative,\r\n      isUserAnswer: true,\r\n    };\r\n\r\n    const alternativeIndex = alternativesCopy.findIndex(\r\n      alternative => alternative.id === updatedAlternative.id,\r\n    );\r\n\r\n    alternativesCopy[alternativeIndex] = updatedAlternative;\r\n\r\n    setQuizData({\r\n      ...quizData,\r\n      questions: [\r\n        ...quizData.questions.slice(0, currentQuestionIndex),\r\n        {\r\n          ...currentQuestion,\r\n          alternatives: alternativesCopy,\r\n          isAnswered: true,\r\n        },\r\n        ...quizData.questions.slice(currentQuestionIndex + 1),\r\n      ],\r\n    });\r\n\r\n    if (clickedAlternative.isCorrect) {\r\n      setNumCorrectAnswers(numCorrectAnswers + 1);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      goToNextPage();\r\n    }, 2500);\r\n  };\r\n\r\n  const restartQuiz = () => {\r\n    setNumCorrectAnswers(0);\r\n    setQuizData(quizDataInitialFormatted);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.quiz}>\r\n      {isStartPage && (\r\n        <div className={styles.page}>\r\n          <Start\r\n            description={quizData.description}\r\n            img={quizData.img}\r\n            onClickStart={goToNextPage}\r\n            title={quizData.title}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {!isStartPage && !isResultPage && (\r\n        <div className={styles.page}>\r\n          <Question\r\n            numCurrentQuestion={numCurrentQuestion}\r\n            numTotalQuestions={numTotalQuestions}\r\n            onAnswerSelected={onAnswerSelected}\r\n            question={currentQuestion}\r\n            quizTitle={quizData.title}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {isResultPage && (\r\n        <div className={styles.page}>\r\n          <Result\r\n            quizTitle={quizData.title}\r\n            currentUrl={currentUrl}\r\n            numCorrectAnswers={numCorrectAnswers}\r\n            numTotalQuestions={numTotalQuestions}\r\n            results={quizData.results}\r\n            onClickRestart={restartQuiz}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}