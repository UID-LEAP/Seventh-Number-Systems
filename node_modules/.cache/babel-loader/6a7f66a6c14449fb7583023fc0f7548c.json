{"ast":null,"code":"import _toConsumableArray from\"C:/Users/bryce/OneDrive/Desktop/LEAPQuiz/seventh-ratios-react-quiz/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/bryce/OneDrive/Desktop/LEAPQuiz/seventh-ratios-react-quiz/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"C:/Users/bryce/OneDrive/Desktop/LEAPQuiz/seventh-ratios-react-quiz/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import styles from'./Quiz.module.scss';import quizDataInitial from'./assets/quiz-data';import Start from'./pages/Start/Start';import Question from'./pages/Question/Question';import Result from'./pages/Result/Result';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Quiz(){var quizDataInitialFormatted=_objectSpread(_objectSpread({},quizDataInitial),{},{questions:quizDataInitial.questions.map(function(question){return _objectSpread(_objectSpread({},question),{},{isAnswered:false,alternatives:question.alternatives.map(function(alternative){return _objectSpread(_objectSpread({},alternative),{},{isUserAnswer:false});})});})});var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),numCorrectAnswers=_useState4[0],setNumCorrectAnswers=_useState4[1];var _useState5=useState(quizDataInitialFormatted),_useState6=_slicedToArray(_useState5,2),quizData=_useState6[0],setQuizData=_useState6[1];var currentUrl=window.location.href;var numTotalQuestions=quizData.questions.length;var numCurrentQuestion=currentPage-1;var isStartPage=currentPage===1;var isResultPage=currentPage===numTotalQuestions+2;var currentQuestion=quizData.questions[currentPage-2];var goToNextPage=function goToNextPage(){setCurrentPage(currentPage+1);};var onAnswerSelected=function onAnswerSelected(clickedAlternative){var currentQuestionIndex=quizData.questions.findIndex(function(question){return question.id===currentQuestion.id;});var alternativesCopy=_toConsumableArray(currentQuestion.alternatives);var foundAlternative=alternativesCopy.find(function(alternative){return alternative.id===clickedAlternative.id;});var updatedAlternative=_objectSpread(_objectSpread({},foundAlternative),{},{isUserAnswer:true});var alternativeIndex=alternativesCopy.findIndex(function(alternative){return alternative.id===updatedAlternative.id;});alternativesCopy[alternativeIndex]=updatedAlternative;setQuizData(_objectSpread(_objectSpread({},quizData),{},{questions:[].concat(_toConsumableArray(quizData.questions.slice(0,currentQuestionIndex)),[_objectSpread(_objectSpread({},currentQuestion),{},{alternatives:alternativesCopy,isAnswered:true})],_toConsumableArray(quizData.questions.slice(currentQuestionIndex+1)))}));if(clickedAlternative.isCorrect){setNumCorrectAnswers(numCorrectAnswers+1);}setTimeout(function(){goToNextPage();},2500);};var restartQuiz=function restartQuiz(){setNumCorrectAnswers(0);setQuizData(quizDataInitialFormatted);setCurrentPage(1);};return/*#__PURE__*/_jsxs(\"div\",{className:styles.quiz,children:[isStartPage&&/*#__PURE__*/_jsx(\"div\",{className:styles.page,children:/*#__PURE__*/_jsx(Start,{description:quizData.description,img:quizData.img,onClickStart:goToNextPage,title:quizData.title})}),!isStartPage&&!isResultPage&&/*#__PURE__*/_jsx(\"div\",{className:styles.page,children:/*#__PURE__*/_jsx(Question,{numCurrentQuestion:numCurrentQuestion,numTotalQuestions:numTotalQuestions,onAnswerSelected:onAnswerSelected,question:currentQuestion,quizTitle:quizData.title})}),isResultPage&&/*#__PURE__*/_jsx(\"div\",{className:styles.page,children:/*#__PURE__*/_jsx(Result,{quizTitle:quizData.title,currentUrl:currentUrl,numCorrectAnswers:numCorrectAnswers,numTotalQuestions:numTotalQuestions,results:quizData.results,onClickRestart:restartQuiz})})]});}export default Quiz;","map":{"version":3,"names":["React","useState","styles","quizDataInitial","Start","Question","Result","Quiz","quizDataInitialFormatted","questions","map","question","isAnswered","alternatives","alternative","isUserAnswer","currentPage","setCurrentPage","numCorrectAnswers","setNumCorrectAnswers","quizData","setQuizData","currentUrl","window","location","href","numTotalQuestions","length","numCurrentQuestion","isStartPage","isResultPage","currentQuestion","goToNextPage","onAnswerSelected","clickedAlternative","currentQuestionIndex","findIndex","id","alternativesCopy","foundAlternative","find","updatedAlternative","alternativeIndex","slice","isCorrect","setTimeout","restartQuiz","quiz","page","description","img","title","results"],"sources":["C:/Users/bryce/OneDrive/Desktop/LEAPQuiz/seventh-ratios-react-quiz/src/components/Quiz/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './Quiz.module.scss';\r\nimport quizDataInitial from './assets/quiz-data';\r\n\r\nimport Start from './pages/Start/Start';\r\nimport Question from './pages/Question/Question';\r\nimport Result from './pages/Result/Result';\r\n\r\nfunction Quiz() {\r\n  const quizDataInitialFormatted = {\r\n    ...quizDataInitial,\r\n    questions: quizDataInitial.questions.map(question => ({\r\n      ...question,\r\n      isAnswered: false,\r\n      alternatives: question.alternatives.map(alternative => ({\r\n        ...alternative,\r\n        isUserAnswer: false,\r\n      })),\r\n    })),\r\n  };\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [numCorrectAnswers, setNumCorrectAnswers] = useState(0);\r\n  const [quizData, setQuizData] = useState(quizDataInitialFormatted);\r\n\r\n  const currentUrl = window.location.href;\r\n\r\n  const numTotalQuestions = quizData.questions.length;\r\n  const numCurrentQuestion = currentPage - 1;\r\n\r\n  const isStartPage = currentPage === 1;\r\n  const isResultPage = currentPage === numTotalQuestions + 2;\r\n\r\n  const currentQuestion = quizData.questions[currentPage - 2];\r\n\r\n  const goToNextPage = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const onAnswerSelected = clickedAlternative => {\r\n    const currentQuestionIndex = quizData.questions.findIndex(\r\n      question => question.id === currentQuestion.id,\r\n    );\r\n\r\n    const alternativesCopy = [...currentQuestion.alternatives];\r\n\r\n    const foundAlternative = alternativesCopy.find(\r\n      alternative => alternative.id === clickedAlternative.id,\r\n    );\r\n\r\n    const updatedAlternative = {\r\n      ...foundAlternative,\r\n      isUserAnswer: true,\r\n    };\r\n\r\n    const alternativeIndex = alternativesCopy.findIndex(\r\n      alternative => alternative.id === updatedAlternative.id,\r\n    );\r\n\r\n    alternativesCopy[alternativeIndex] = updatedAlternative;\r\n\r\n    setQuizData({\r\n      ...quizData,\r\n      questions: [\r\n        ...quizData.questions.slice(0, currentQuestionIndex),\r\n        {\r\n          ...currentQuestion,\r\n          alternatives: alternativesCopy,\r\n          isAnswered: true,\r\n        },\r\n        ...quizData.questions.slice(currentQuestionIndex + 1),\r\n      ],\r\n    });\r\n\r\n    if (clickedAlternative.isCorrect) {\r\n      setNumCorrectAnswers(numCorrectAnswers + 1);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      goToNextPage();\r\n    }, 2500);\r\n  };\r\n\r\n  const restartQuiz = () => {\r\n    setNumCorrectAnswers(0);\r\n    setQuizData(quizDataInitialFormatted);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.quiz}>\r\n      {isStartPage && (\r\n        <div className={styles.page}>\r\n          <Start\r\n            description={quizData.description}\r\n            img={quizData.img}\r\n            onClickStart={goToNextPage}\r\n            title={quizData.title}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {!isStartPage && !isResultPage && (\r\n        <div className={styles.page}>\r\n          <Question\r\n            numCurrentQuestion={numCurrentQuestion}\r\n            numTotalQuestions={numTotalQuestions}\r\n            onAnswerSelected={onAnswerSelected}\r\n            question={currentQuestion}\r\n            quizTitle={quizData.title}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {isResultPage && (\r\n        <div className={styles.page}>\r\n          <Result\r\n            quizTitle={quizData.title}\r\n            currentUrl={currentUrl}\r\n            numCorrectAnswers={numCorrectAnswers}\r\n            numTotalQuestions={numTotalQuestions}\r\n            results={quizData.results}\r\n            onClickRestart={restartQuiz}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}